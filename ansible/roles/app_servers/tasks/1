---
# tasks file for app_servers
- name: Install dependencies for Docker
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: yes

- name: Add Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: true

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present

- name: Update apt cache after adding docker repo
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker Engine and Docker Compose
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Add digi user to the docker group
  ansible.builtin.user:
    name: digi
    groups: docker
    append: yes

- name: Reset SSH connection to apply group changes
  ansible.builtin.meta: reset_connection

- name: Create app directory
  ansible.builtin.file:
    path: /home/digi/app
    state: directory
    owner: digi
    group: digi
    mode: '0755'

- name: Copy .env and docker-compose files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/digi/app/{{ item }}"
    owner: digi
    group: digi
  loop:
    - .env
    - docker-compose.yaml

- name: Log in to private Docker registry
  community.docker.docker_login:
    registry_url: registry.99digital.co.il
    username: "{{ vault_docker_username }}"
    password: "{{ vault_docker_password }}"
  # no_log: true

- name: Start and pull application services with Docker Compose
  community.docker.docker_compose_v2:
    project_src: "/home/digi/app"
    state: present
    pull: missing # Pulls images before starting containers

